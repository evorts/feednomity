---
- name: Build and deploy web, api and mail blaster
  hosts: appserver
  remote_user: steven
  vars:
    - config_filename: "config.ansible.yml"
    - src_dir: "../"
    - dest_dir: "/home/steven/apps/feednomity-src"
    - git_repo: "git@github.com:evorts/feednomity.git"
    - docker_image_name: "evorts/feednomity"
    - docker_image_tag: 1.0.4
    - docker_container_tag: ansible_date_time.epoch
    - web_docker_name: feednomity_web
    - api_docker_name: feednomity_api
    - blaster_docker_name: feednomity_blaster
  tasks:
    # cleanup
    - name: Cleanup destination directory
      file:
        state: absent
        path: "{{dest_dir}}"
      tags:
        - deployment
    - name: Ensure target directory exist
      ansible.builtin.file:
        path: "{{dest_dir}}"
        state: directory
        mode: '0755'
      tags:
        - deployment
    - name: Ensure pulled the latest source code
      ansible.builtin.git:
        repo: "{{git_repo}}"
        dest: "{{dest_dir}}"
        single_branch: yes
      tags:
        - deployment
    - name: Copy necessary configurations
      ansible.builtin.copy:
        src: "{{src_dir}}/config.docker.prod.yml"
        dest: "{{dest_dir}}/config.docker.yml"
        mode: '0644'
      tags:
        - deployment
    - name: "Build docker image {{docker_image_name}}:{{docker_image_tag}}"
      community.docker.docker_image:
        name: "{{docker_image_name}}"
        tag: "{{docker_image_tag}}"
        build:
          path: "{{dest_dir}}"
        source: build
        state: present
      tags:
        - deployment
    - name: Stop and remove docker containers
      ansible.builtin.shell: "docker rm -f $(docker ps -q -a)"
      ignore_errors: yes
      tags:
        - deployment
    - name: Run docker for web
      community.docker.docker_container:
        name: "{{web_docker_name}}"
        image: "{{docker_image_name}}:{{docker_image_tag}}"
        command: "./app web"
        state: started
        restart: yes
        ports:
          - 3700:3700
      tags:
        - deployment
    - name: Run docker for api
      community.docker.docker_container:
        name: "{{api_docker_name}}"
        image: "{{docker_image_name}}:{{docker_image_tag}}"
        command: "./app api"
        state: started
        restart: yes
        ports:
          - 3701:3701
      tags:
        - deployment
    # cleanup
    - name: Cleanup destination directory
      file:
        state: absent
        path: "{{dest_dir}}"
      tags:
        - deployment
    # blaster section
    - name: Run docker for blaster
      community.docker.docker_container:
        name: "{{blaster_docker_name}}"
        image: "{{docker_image_name}}:{{docker_image_tag}}"
        command: "./app blaster"
        state: stopped
      tags:
        - deployment
        - scheduler
    - name: Starting blaster container
      community.docker.docker_container:
        name: "{{blaster_docker_name}}"
        state: started
        restart: yes
      tags:
        - scheduler
        - start_scheduler
    - name: Stopping blaster container
      community.docker.docker_container:
        name: "{{blaster_docker_name}}"
        state: stopped
        restart: yes
      tags:
        - scheduler
        - stop_scheduler
    # restart service
    - name: Run docker for api
      community.docker.docker_container:
        name: "{{api_docker_name}}"
        image: "{{docker_image_name}}:{{docker_image_tag}}"
        state: started
        restart: yes
      tags:
        - restart_app
    - name: Run docker for web
      community.docker.docker_container:
        name: "{{web_docker_name}}"
        image: "{{docker_image_name}}:{{docker_image_tag}}"
        state: started
        restart: yes
      tags:
        - restart_app